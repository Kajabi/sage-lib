////
/// Sage color palette
///
/// @group sage
////


///
/// Sage color palette token
///
$sage-colors: (
  primary: (
    100: #E6F4FE,
    200: #8ECAFB,
    300: #0072ef,
    400: #054FB8,
    500: #07265F,
  ),
  sage: (
    100: #DDF8F0,
    200: #86D5BC,
    300: #23856D,
    400: #225D53,
    500: #183E3B,
  ),
  yellow: (
    100: #F9F0CD,
    200: #FCE79C,
    300: #F0C024,
    400: #8D5C2F,
    500: #5C381E,
  ),
  red: (
    100: #FFE0E0,
    200: #FDB0AA,
    300: #CF3C32,
    400: #99221E,
    500: #5E0D0D,
  ),
  orange: (
    100: #FBEFE4,
    200: #F7BD8B,
    300: #F89035,
    400: #A2411A,
    500: #5A260C,
  ),
  purple: (
    100: #EEE4F6,
    200: #D9C2EF,
    300: #8E5AD8,
    400: #50348A,
    500: #381C5E,
  ),
  grey: (
    100: #F8FAFB,
    200: #F4F8FA,
    300: #E0E7F1,
    400: #BBCAD8,
    500: #94A6B8,
  ),
  charcoal: (
    100: #65778B,
    200: #526275,
    300: #435465,
    400: #304050,
    500: #263240,
  ),
  white: (
    100: #fff,
    200: #fff,
    300: #fff,
    400: #fff,
    500: #fff,
  ),
  black: (
    100: #000,
    200: #000,
    300: #000,
    400: #000,
    500: #000,
  ),
);

///
/// Sage breakpoints token utility
///
/// @param {string} $base The color token to retrieve
/// @param {number} $value [300] The tint or shade to retrieve
///
/// @return {color} The value retrieved
///
@function sage-color($base, $value: 300) {
  $color: map-get(map-get($sage-colors, $base), $value);
  @return $color;
}
