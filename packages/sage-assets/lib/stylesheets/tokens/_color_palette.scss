////
/// Sage color palette
///
/// @group sage
////


///
/// Sage color palette token
///
$sage-colors: (
  primary: (
    100: #e6f4fe,
    200: #8ecafb,
    300: #0072ef,
    400: #054fb8,
    500: #07265f,
  ),
  sage: (
    100: #d0f6ea,
    200: #86d5bc,
    300: #23856d,
    400: #225d53,
    500: #183e3b,
  ),
  yellow: (
    100: #fcf8e8,
    200: #fdf0b9,
    300: #f0c024,
    400: #8d5c2f,
    500: #5c381e,
  ),
  red: (
    100: #fff7f7,
    200: #f9c0b9,
    300: #cf3c32,
    400: #99221e,
    500: #5e0d0d,
  ),
  orange: (
    100: #fbefe4,
    200: #f7bd8b,
    300: #f89035,
    400: #a2411a,
    500: #5a260c,
  ),
  purple: (
    100: #f5effa,
    200: #d9c2ef,
    300: #8e5ad8,
    400: #50348a,
    500: #381c5e,
  ),
  grey: (
    100: #f8fafb,
    200: #f4f8fa,
    300: #e0e7f1,
    400: #bbcad8,
    500: #94a6b8,
  ),
  charcoal: (
    100: #65778b,
    200: #526275,
    300: #465462,
    400: #304050,
    500: #263240,
  ),
  white: (
    100: #fff,
    200: #fff,
    300: #fff,
    400: #fff,
    500: #fff,
  ),
  black: (
    100: #000,
    200: #000,
    300: #000,
    400: #000,
    500: #000,
  ),
);

///
/// Sage breakpoints token utility
///
/// @param {string} $base The color token to retrieve
/// @param {number} $value [300] The tint or shade to retrieve
///
/// @return {color} The value retrieved
///
@function sage-color($base, $value: 300) {
  $color: map-get(map-get($sage-colors, $base), $value);
  @return $color;
}
