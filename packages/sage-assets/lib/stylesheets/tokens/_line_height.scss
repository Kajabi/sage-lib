////
/// Sage line height/leading
///
/// @group sage
////


///
/// Sage raw line height/leading token (non-responsive)
///
$sage-line-heights: (
  xs: sage-baseline(4), // 16
  sm: sage-baseline(5), // 20
  md: sage-baseline(6), // 24
  lg: sage-baseline(7), // 28
  xl: sage-baseline(8), // 32
  2xl: sage-baseline(10), // 40
  3xl: sage-baseline(12), // 48
  4xl: sage-baseline(15), // 60
);

///
/// Sage responsive line height/leading custom props
///
/// NOTE: Changes to these configurations should also be synced up in the following know places:
///   - `docs/lib/sage_rails/app/sage_components/sage_tokens.rb`
///   - `packages/sage-assets/lib/stylesheets/components/_icon.scss`
///   - `packages/sage-react/lib/Icon/configs.js`
:root {
  --sage-line-height-body-xs: #{map-get($sage-line-heights, xs)};
  --sage-line-height-body-sm: #{map-get($sage-line-heights, sm)};
  --sage-line-height-body: #{map-get($sage-line-heights, md)};
  --sage-line-height-h6: #{map-get($sage-line-heights, md)};
  --sage-line-height-h5: #{map-get($sage-line-heights, lg)};
  --sage-line-height-h4: #{map-get($sage-line-heights, xl)};
  --sage-line-height-h3: #{map-get($sage-line-heights, 2xl)};
  --sage-line-height-h2: #{map-get($sage-line-heights, 3xl)};
  --sage-line-height-h1: #{map-get($sage-line-heights, 4xl)};
}

@media screen and (min-width: sage-breakpoint(lg-min)) {
  :root {
    // --sage-line-height-body-xs: same
    // --sage-line-height-body-sm: same
    // --sage-line-height-body: same
    // --sage-line-height-h6: same
    // --sage-line-height-h5: same
    // --sage-line-height-h4: same
    // --sage-line-height-h3: same
    // --sage-line-height-h2: same
    // --sage-line-height-h1: same
  }
}

///
/// Sage line height token utility
///
/// @param {string} $key [body] The token to retrieve.
///    By default, this should be a type spec token.
///    If the next parameter is `false` then this should be a line height token.
/// @param {bool} $responsive [true] Whether or not retrieve a responsive css custom property (based on type specs) or a flat value (based on line-height tokens).
///
/// @example scss - Responsive setting
///   .sage-box {
///     line-height: sage-line-height(body-sm);
///   }
///
///   // Output
///   .sage-box {
///     line-height: var(--sage-line-height-body-sm);
///   }
///
/// @example scss - Flat setting
///   .sage-box {
///     @include sage-line-height(md, false);
///   }
///
///   // Output
///   .sage-box {
///     line-height: 1.75rem;
///   }
///
/// @return {length} The value retrieved
///
@function sage-line-height($key: body, $responsive: true) {
  @if ($responsive) {
    @return var(--sage-line-height-#{$key});
  }

  @else {
    @return map-get($sage-line-heights, $key);
  }
}
