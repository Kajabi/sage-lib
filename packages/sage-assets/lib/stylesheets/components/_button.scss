////
/// Button
///
/// @group sage
////

/* stylelint-disable selector-max-compound-selectors */

//
// Base style variables
//
$-btn-transition: map-get($sage-transitions, default);
$-btn-base-padding-block: var(--pine-dimension-xs); // vertical (y) axis
$-btn-base-padding-inline: var(--pine-dimension-sm); // horizontal (x) axis
$-btn-base-line-height: var(--pine-line-height-body);
$-btn-border-radius: var(--pine-border-radius-full);
$-btn-shadow-base: var(--pine-box-shadow-050);
$-btn-icon-only-standard-size: var(--pine-dimension-xl);
$-btn-icon-only-subtle-size: var(--pine-dimension-sm);
$-btn-icon-only-hover-size: var(--pine-dimension-md);
$-btn-icon-only-focus-size: var(--pine-dimension-lg);
$-btn-toolbar-group-height: var(--pine-dimension-xl);
$-btn-disclosure-left-padding: rem(26px);

$-btn-base-styles: (
  accent: (
    default: (
      color: var(--pine-color-text-primary),
      background-color: var(--pine-color-accent),
      border-color: var(--pine-color-accent),
      ring-color: var(--pine-color-focus-ring),
    ),
    hover: (
      color: var(--pine-color-text-primary),
      background-color: var(--pine-color-accent-hover),
      border-color: var(--pine-color-accent-hover),
    ),
    focus: (
      color: var(--pine-color-text-primary),
      background-color: var(--pine-color-accent),
      border-color: var(--pine-color-accent),
    ),
    disabled: (
      color: var(--pine-color-text-accent-disabled),
      background-color: var(--pine-color-accent-disabled),
      border-color: var(--pine-color-accent-disabled),
    )
  ),
  primary: (
    default: (
      color: var(--pine-color-text-primary),
      background-color: var(--pine-color-primary),
      border-color: var(--pine-color-primary),
      ring-color: sage-color(purple, 300),
    ),
    hover: (
      color: var(--pine-color-text-primary),
      background-color: var(--pine-color-primary-hover),
      border-color: var(--pine-color-primary-hover),
    ),
    focus: (
      color: var(--pine-color-text-primary),
      background-color: var(--pine-color-primary),
      border-color: var(--pine-color-primary),
    ),
    disabled: (
      color: var(--pine-color-text-primary-disabled),
      background-color: var(--pine-color-primary-disabled),
      border-color: var(--pine-color-primary-disabled),
    )
  ),
  secondary: (
    default: (
      color: var(--pine-color-text-secondary),
      background-color: var(--pine-color-secondary),
      ring-color: var(--pine-color-focus-ring),
    ),
    hover: (
      color: var(--pine-color-text-secondary-hover),
      background-color: var(--pine-color-secondary-hover),
    ),
    focus: (
      color: var(--pine-color-text-secondary),
      background-color: var(--pine-color-secondary),
    ),
    disabled: (
      color: var(--pine-color-text-secondary-disabled),
      background-color: var(--pine-color-secondary-disabled),
    )
  ),
  danger: (
    default: (
      color: var(--pine-color-text-primary),
      background-color: var(--pine-color-danger),
      border-color: var(--pine-color-danger),
      ring-color: var(--pine-color-focus-ring-danger),
    ),
    hover: (
      color: var(--pine-color-text-primary),
      background-color: var(--pine-color-danger-hover),
      border-color: var(--pine-color-danger-hover),
    ),
    focus: (
      color: var(--pine-color-text-primary),
      background-color: var(--pine-color-danger),
      border-color: var(--pine-color-danger),
    ),
    disabled: (
      color: var(--pine-color-text-danger-disabled),
      background-color: var(--pine-color-danger-disabled),
      border-color: var(--pine-color-danger-disabled),
    )
  ),
);

$-btn-subtle-styles: (
  accent: (
    default: sage-color(primary, 300),
    hover: sage-color(primary, 300),
    hover-background: sage-color(primary, 100),
    focus: sage-color(primary, 300),
    focus-outline: sage-color(purple, 300),
    disabled: sage-color(primary, 200),
  ),
  primary: (
    default: sage-color(grey, 900),
    hover: sage-color(grey, 900),
    hover-background: sage-color(grey, 150),
    focus: sage-color(charcoal, 400),
    focus-outline: sage-color(purple, 300),
    disabled: sage-color(charcoal, 100),
  ),
  secondary: (
    default: sage-color(grey, 900),
    hover: sage-color(grey, 900),
    hover-background: sage-color(grey, 150),
    focus: sage-color(charcoal, 400),
    focus-outline: sage-color(purple, 300),
    disabled: sage-color(charcoal, 100),
  ),
  danger: (
    default: sage-color(red, 500),
    hover: sage-color(red, 500),
    hover-background: sage-color(red, 150),
    focus: sage-color(red, 500),
    focus-outline: sage-color(red, 300),
    disabled: sage-color(red, 300),
  ),
);

// NOTE: the following colors should be kept in sync
// with the colors in `_alert.scss`
$-alert-close-btn-background-colors: (
  default: sage-color(grey, 300),
  draft: sage-color(grey, 300),
  info: sage-color(primary, 200),
  published: sage-color(sage, 200),
  success: sage-color(sage, 200),
  warning: sage-color(yellow, 300),
  approaching: sage-color(yellow, 300),
  reached: sage-color(orange, 200),
  exceeded: sage-color(red, 300),
  danger: sage-color(red, 300),
);

//
// Custom variables
//
$-btn-interactive-badge-icon-size: var(--pine-dimension-md);
$-btn-loading-min-height: rem(36px);

// stylelint-disable max-nesting-depth
.sage-btn {
  @extend %t-sage-body-med;
  @include sage-button-style-reset();
  @include sage-focus-ring;

  display: inline-flex;
  position: relative;
  align-self: inherit;
  align-items: center;
  justify-self: flex-start;
  padding: $-btn-base-padding-block $-btn-base-padding-inline;
  font-family: $-heading-font;
  text-align: left; // Prevents text alignment issue when inner text is truncated
  border-width: 1px;
  border-style: solid;
  border-radius: $-btn-border-radius;
  box-shadow: $-btn-shadow-base;
  transition: $-btn-transition;
  transition-property: border, background-color, box-shadow;

  &:focus {
    outline: none;
  }

  &:disabled,
  &[aria-disabled="true"] {
    @include sage-button-style-disabled;
  }

  &:focus:not(:disabled):not([aria-disabled="true"]),
  &:active:not(:disabled):not([aria-disabled="true"]) {
    .sage-dropdown__item > & {
      @include sage-focus-outline--update-color(transparent);
    }
  }

  // Contextual modifications
  .sage-dropdown--contained .sage-dropdown__trigger &,
  .sage-panel-controls__tabs-dropdown .sage-dropdown__trigger &,
  .sage-panel-controls__toolbar .sage-dropdown__trigger &,
  .sage-panel-controls__bulk-actions .sage-dropdown__trigger & {
    @include sage-focus-outline--update-color(transparent);

    width: inherit;
    border-radius: inherit;

    &:hover {
      background-color: var(--pine-color-secondary);
    }
  }

  .sage-toolbar .sage-dropdown__trigger &,
  .sage-toolbar__group .sage-dropdown__trigger & {
    @include sage-focus-outline--update-color(transparent);

    width: inherit;
    border-radius: inherit;
  }

  .sage-dropdown__item > & {
    width: 100%;
    padding-block-start: rem(9px);
    padding-block-end: rem(9px);
    border-radius: var(--pine-dimension-none);
  }

  .sage-dropdown__trigger > & {
    line-height: var(--pine-line-height-body);
  }

  .sage-dropdown__trigger--custom-width > & {
    width: 100%;
  }

  .sage-dropdown__trigger--select & {
    min-height: var(--pine-dimension-xl);
    font-family: $-body-font-stack;
    font-weight: var(--pine-font-weight-medium);
    border-width: var(--pine-dimension-none);
    box-shadow: sage-border-interactive(default);
    &:hover {
      box-shadow: sage-border-interactive(hover);
    }
    &:disabled {
      box-shadow: sage-border-interactive(disabled);
    }
  }

  .sage-expandable-card--align-arrow-right &.sage-expandable-card__trigger {
    display: flex;
    justify-content: space-between;
    width: 100%;

    &::before {
      margin-inline-end: var(--pine-dimension-none);
    }

    &::after {
      transform: translate3D(-50%, -50%, 0);
    }
  }

  .sage-badge & {
    display: flex;
    justify-content: center;
    position: absolute;
    inset-inline-end: var(--pine-dimension-none);
    width: $-btn-interactive-badge-icon-size;
    margin: auto var(--pine-dimension-none);
    border-radius: var(--pine-dimension-none) sage-border(radius-x-large) sage-border(radius-x-large) var(--pine-dimension-none);

    &::before {
      transform: translateY(1px); /* needed as sage-font-size(sm) equates to 13px, not 14px. This 1px is accounting for that 1px */
      font-size: var(--pine-font-size-body-sm);
    }

    &::after {
      width: $-btn-interactive-badge-icon-size;
      height: $-btn-interactive-badge-icon-size;
      border-radius: var(--pine-dimension-none) sage-border(radius-x-large) sage-border(radius-x-large) var(--pine-dimension-none);
    }

    &:first-child:not(:last-child) {
      margin-inline-end: var(--pine-dimension-xs);
    }

    + & {
      margin-inline-start: var(--pine-dimension-none);
    }

    &.sage-btn--tag::before {
      font-size: var(--pine-font-size-body-md);
    }
  }

  .sage-badge & {
    width: rem(28px);
  }
  .sage-sortable__item-actions & {
    &:not(:last-child) {
      margin-inline-end: var(--pine-dimension-sm);
    }
  }

  .sage-input-group & {
    position: absolute;
    z-index: sage-z-index(default, 1);
    inset-inline-end: rem(1px);
    bottom: rem(1px);
    height: rem(38px);
    background-color: sage-color(white);
    background-color: var(--pine-color-secondary);
    border-color: transparent;
    border-start-end-radius: 10px;
    border-end-end-radius: 10px;
    border-start-start-radius: 0;
    border-end-start-radius: 0;

    @include sage-focus-outline--update-color(transparent);

    &::before {
      margin-inline-end: var(--pine-dimension-none);
    }

    &:focus {
      @include sage-focus-ring;
    }
  }

  .sage-panel-controls__toolbar-btn-group > &,
  .sage-toolbar__group > &,
  .sage-toolbar__group > .sage-dropdown .sage-dropdown__trigger > & {
    border-radius: var(--pine-dimension-none);
  }

  .sage-panel-controls__toolbar-btn-group > &:not(.sage-btn--secondary) {
    position: absolute;
    inset-inline-end: var(--pine-dimension-none);
    inset-block-end: var(--pine-dimension-none);
    min-height: calc(#{$-btn-toolbar-group-height} + var(--pine-dimension-025)); /* expand to toolbar group height + border offset */
  }

  .sage-toolbar__group > .sage-input ~ &.sage-btn--primary,
  .sage-toolbar__group > .sage-search ~ &.sage-btn--primary {
    box-shadow: 0 0 0 1px var(--pine-color-primary);
    border-color: transparent;
  }

  .sage-toolbar__group .sage-dropdown__trigger > & {
    border-color: var(--pine-color-border);
  }

  .sage-panel-controls__toolbar-btn-group &:not(:only-child) {
    margin-inline-start: rem(-1px); /* offset border overlap of multiple buttons */
  }

  .sage-panel-controls__toolbar-btn-group > &:first-child {
    border-start-start-radius: var(--pine-dimension-xs);
    border-end-start-radius: var(--pine-dimension-xs);
  }

  .sage-panel-controls__toolbar-btn-group > &:last-child {
    border-start-end-radius: var(--pine-dimension-xs);
    border-end-end-radius: var(--pine-dimension-xs);
  }

  .sage-toolbar__group > &:first-child,
  .sage-toolbar__group > .sage-dropdown:first-child .sage-dropdown__trigger > & {
    border-start-start-radius: sage-border(radius-medium);
    border-end-start-radius: sage-border(radius-medium);
  }

  .sage-toolbar__group > &:last-child,
  .sage-toolbar__group > .sage-dropdown:last-child .sage-dropdown__trigger > & {
    border-start-end-radius: sage-border(radius-medium);
    border-end-end-radius: sage-border(radius-medium);
  }

  .sage-toolbar__group > .sage-dropdown + &,
  .sage-toolbar__group > & + & {
    margin-inline-start: rem(-1px); /* offset border overlap of multiple buttons */
  }

  .sage-panel-controls__toolbar > &:hover,
  .sage-toolbar__group > &:hover {
    z-index: sage-z-index(default, 1); /* raise button to display full border */
  }

  .sage-panel-controls__toolbar-btn-group--expand-collapse > & {
    border-radius: var(--pine-dimension-xs);
  }

  .sage-panel-controls__toolbar > &,
  .sage-toolbar > &,
  .sage-panel-controls__pagination > & {
    border-radius: var(--pine-dimension-xs);
  }

  .sage-panel-controls__toolbar > &,
  .sage-panel-controls__pagination > & {
    &:not(:last-child) {
      margin-inline-end: var(--pine-dimension-md);
    }
  }

  .sage-panel-controls__toolbar &,
  .sage-toolbar & {
    border-color: var(--pine-color-border);
  }

  .sage-upload-card & {
    &.sage-btn--subtle:focus {
      @include sage-focus-outline--update-color(var(--pine-color-focus-ring));
    }
  }

  &:not([class*="icon-only"]) {
    line-height: $-btn-base-line-height;
  }

  &.sage-btn--disclosure {
    padding-inline-end: calc(1rem + #{$-btn-disclosure-left-padding});

    &::after {
      @include sage-icon-base(caret-down, md, pine);

      position: absolute;
      inset-inline-end: 1rem;
    }

    &[class*="icon-only"]::after {
      @include sage-icon-base(caret-down, xs, pine);

      inset-inline-end: $-btn-disclosure-left-padding;
      font-weight: var(--pine-font-weight-bold);
    }

    &[class*="icon-only"].sage-btn--small::after {
      inset-inline-end: var(--pine-dimension-150);
    }

    &:has(pds-icon) {
      padding-inline-end: $-btn-base-padding-inline;
    }
  }

  &.sage-btn--rich-text,
  .toolbar-editor__section &,
  .toolbar-editor & {
    $-btn-rte-padding: rem(6px);

    padding: $-btn-base-padding-block var(--pine-dimension-lg) $-btn-base-padding-block var(--pine-dimension-xs);
    border-radius: 6px;
    border-width: 0;

    @media (max-width: sage-breakpoint(sm-max)) {
      padding: $-btn-rte-padding rem(30px) $-btn-rte-padding $-btn-rte-padding;
    }

    &::before {
      font-size: var(--pine-font-size-body-sm);
    }

    &::after {
      right: 7px;
      font-size: 11px;
      font-weight: var(--pine-font-weight-bold);
    }

    &:hover {
      background-color: var(--pine-color-grey-200);
    }

    &.sage-btn--selected {
      color: var(--pine-color-text-primary);
      background-color: var(--pine-color-primary);

      &::after {
        color: var(--pine-color-secondary);
      }
    }

    &:not(.sage-btn--subtle):not(.sage-btn--disclosure) {
      padding: var(--pine-dimension-xs);

      @media (max-width: sage-breakpoint(sm-max)) {
        padding: $-btn-rte-padding;
      }
    }
  }
  pds-icon {
    pointer-events: none;
  }
  // NOTE: Icon generation consolidated in `core/_icons.scss`
}

/* stylelint-disable selector-no-qualifying-type */
a.sage-btn {
  text-decoration: none;
}
/* stylelint-enable selector-no-qualifying-type */

.sage-btn--is-loading {
  pointer-events: none;

  &[class*="sage-btn--icon"]::before {
    content: "";
  }
}

// Generate button style variations
@each $-style-name, $-styles in $-btn-base-styles {
  .sage-btn--#{$-style-name} {
    @each $-style-type-name, $-style-type-configs in $-styles {
      @if ($-style-type-name == hover) {
        &:hover {
          color: map-get($-style-type-configs, color);
          background-color: map-get($-style-type-configs, background-color);
          border-color: map-get($-style-type-configs, border-color);
        }
      }
      @else if ($-style-type-name == focus) {
        &:focus,
        &:focus-visible,
        &:active {
          color: map-get($-style-type-configs, color);
          background-color: map-get($-style-type-configs, background-color);
          border-color: map-get($-style-type-configs, border-color);
        }
      }
      @else if ($-style-type-name == disabled) {
        &:disabled,
        &[aria-disabled="true"] {
          color: map-get($-style-type-configs, color);
          background-color: map-get($-style-type-configs, background-color);
          border-color: map-get($-style-type-configs, border-color);
          box-shadow: none;
        }
      }
      @else {
        @include sage-focus-ring(map-get($-style-type-configs, ring-color));

        color: map-get($-style-type-configs, color);
        background-color: map-get($-style-type-configs, background-color);
        border-color: map-get($-style-type-configs, border-color);

        .sage-toolbar > &,
        .sage-toolbar__group > & {
          @include sage-focus-outline--update-color(transparent);
        }
      }
    }

    &:not(.sage-btn--subtle):not(:disabled):not([aria-disabled="true"]) {
      .sage-toolbar > &:hover,
      .sage-toolbar > .sage-dropdown .sage-dropdown__trigger &:hover,
      .sage-toolbar__group > &:hover,
      .sage-toolbar__group > .sage-dropdown .sage-dropdown__trigger &:hover {
        box-shadow: map-get($sage-toolbar-button-borders, hover);
      }

      .sage-toolbar > &:focus-visible,
      .sage-toolbar > .sage-dropdown .sage-dropdown__trigger &:focus-visible,
      .sage-toolbar__group > &:focus-visible,
      .sage-toolbar__group > .sage-dropdown .sage-dropdown__trigger &:focus-visible {
        z-index: sage-z-index(default, 2);
        box-shadow: map-get($sage-toolbar-button-borders, focus);
      }
    }
  }
}

// Primary style overrides
.sage-btn--primary {
  // apply toolbar button state styling
  .sage-toolbar__group > .sage-input ~ &:not(.sage-btn--subtle):not(:disabled):not([aria-disabled="true"]):hover,
  .sage-toolbar__group > .sage-search ~ &:not(.sage-btn--subtle):not(:disabled):not([aria-disabled="true"]):hover {
    box-shadow: map-get($sage-toolbar-button-borders, hover-large);
  }
  .sage-toolbar__group > .sage-input ~ &:not(.sage-btn--subtle):not(:disabled):not([aria-disabled="true"]):focus-visible,
  .sage-toolbar__group > .sage-search ~ &:not(.sage-btn--subtle):not(:disabled):not([aria-disabled="true"]):focus-visible {
    box-shadow: map-get($sage-toolbar-button-borders, focus);
  }
}

// Secondary styles, no shadow variation
.sage-btn--secondary {
  color: var(--pine-color-text-secondary);
  background-color: var(--pine-color-secondary);
  border: var(--pine-border);

  &:hover {
    color: var(--pine-color-text-secondary-hover);
    background-color: var(--pine-color-secondary-hover);
    border-color: var(--pine-color-border-hover);
  }

  &:focus-visible,
  &:active {
    background-color: var(--pine-color-secondary);
    border-color: var(--pine-color-border);
  }

  &:disabled,
  &[aria-disabled="true"] {
    color: var(--pine-color-text-secondary-disabled);
    background-color: var(--pine-color-secondary-disabled);
    border-color: var(--pine-color-border-disabled);
  }
}

.sage-btn--subtle {
  @include sage-focus-outline;
  @include sage-focus-outline($outline-offset-inline: 6px, $outline-offset-block: -1px);

  padding: 0;
  box-shadow: none;
  border-radius: sage-border(radius);
  border: 0;

  &:focus {
    box-shadow: none;
  }

  &[class*="icon-only"] {
    width: $-btn-icon-only-subtle-size;
    height: $-btn-icon-only-subtle-size;
    padding: 0;
    border-radius: sage-border(radius-round);

    &::after {
      width: $-btn-icon-only-hover-size;
      height: $-btn-icon-only-hover-size;
      border-radius: sage-border(radius-round);
    }

    &:hover::after {
      border-color: transparent;
      opacity: 1;
    }

    &:focus::after {
      width: $-btn-icon-only-focus-size;
      height: $-btn-icon-only-focus-size;
    }
  }

  // Generate button style variations
  @each $-style-name, $-styles in $-btn-subtle-styles {
    &.sage-btn--#{$-style-name} {
      color: map-get($-styles, default);
      background-color: transparent;
      border-color: transparent;
      &::after {
        border-color: transparent;
      }

      &:not(:focus):hover {
        color: map-get($-styles, hover);
        background-color: map-get($-styles, hover-background);

        &::after {
          z-index: 0;
          background-color: map-get($-styles, hover-background);
          opacity: 1;
        }

        &::before,
        span,
        pds-icon {
          z-index: 1;
        }
      }

      &:focus,
      &:active {
        color: map-get($-styles, focus);
        background-color: transparent;

        &::after {
          border-color: map-get($-styles, focus-outline);
        }

        &.sage-toast__button {
          color: sage-color(white);
        }
      }

      &.sage-toast__button {
        color: sage-color(white);

        &:focus,
        &:active {
          &::after {
            border-color: sage-color(white);
          }
        }
      }

      &:disabled,
      &[aria-disabled="true"] {
        color: map-get($-styles, disabled);
        background-color: transparent;
      }

      &[class*="icon-only"] {
        .sage-badge & {
          @include sage-focus-ring(map-get($-styles, default));

          position: absolute; /* this keeps the button inside a badge within the visual bounds of the badge component */
          width: $-btn-icon-only-standard-size;
          height: $-btn-icon-only-standard-size;
          padding: 0;
          border-start-start-radius: 0;
          border-end-start-radius: 0;
        }

        // Remove class when Sage Label is fully deprecated in Products
        .sage-label & {
          position: absolute;
          inset-inline-end: sage-spacing(xs);
        }
      }
    }
  }

  @each $name, $value in $-alert-close-btn-background-colors {
    .sage-alert--#{$name} &.sage-alert__close-btn {
      &:not(:focus):hover {
        background-color: $value;

        &::after {
          background-color: $value;
        }
      }

      &:focus,
      &:active {
        border-color: transparent;
        background-color: transparent;
      }
    }
  }

  .sage-assistant & {
    @include sage-focus-outline--update-color(sage-color(white));

    color: sage-color(grey, 150);
    border-color: transparent;

    &:hover {
      color: sage-color(white);
    }

    &:focus-visible {
      color: sage-color(white);
    }
  }

  // react only styles as primary classes are added by default
  &.sage-banner__link.sage-btn--primary,
  &.sage-banner__close.sage-btn--primary {
    color: inherit;

    &:focus-visible,
    &:active {
      color: inherit;

      &::after {
        border-color: inherit;
      }
    }

    &:not(:focus):hover,
    &:not(:focus):hover::after {
      background-color: transparent;
      border-color: transparent;
    }
  }
}

.sage-btn--small {
  @extend %t-sage-body-small-med;
}

.sage-btn--align-end {
  align-self: flex-end;
  float: right;
}

.sage-btn--full-width {
  align-self: stretch;
  justify-content: center;
  justify-self: stretch;
  width: 100%;
}

.sage-btn__truncate-text {
  @include truncate;
  pointer-events: none;

  .sage-dropdown__trigger & {
    display: inline-flex;
    align-items: center;
  }

  .sage-expandable-card--align-arrow-right .sage-expandable-card__trigger & {
    order: -1;
  }

  .sage-btn--is-loading & {
    opacity: 0;
  }

  .sage-copy-btn & {
    display: flex;
  }
}

// Button groups allow for several buttons together to be spaced appropriately
.sage-btn-group {
  display: flex;
  align-items: center;
  flex-wrap: wrap;

  @media screen and (min-width: sage-breakpoint(sm-min)) {
    flex-wrap: nowrap;
  }

  .sage-empty-state--page & {
    @media screen and (max-width: sage-breakpoint(lg-max)) {
      justify-content: center;
    }
  }
}

.sage-btn-group--wrap {
  @media screen and (min-width: sage-breakpoint(sm-min)) {
    flex-wrap: wrap;
  }
}

.sage-btn-group--align-center {
  justify-content: center;
}

.sage-btn-group--align-end {
  justify-content: flex-end;
}

.sage-btn-group--align-space-between {
  justify-content: space-between;
}

.sage-btn-group--border-top {
  padding-block-start: var(--pine-dimension-lg);
  border-block-start: var(--pine-border);
}
