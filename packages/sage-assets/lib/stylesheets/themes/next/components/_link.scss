////
/// Link modifiers
///
/// @group sage
////

$-link-color: sage-color(primary, 300);
$-link-color-hover: sage-color(primary, 400);
$-link-subtext-color: sage-color(charcoal, 200);
$-link-subtext-color-hover: sage-color(charcoal, 400);

$-link-base-styles: (
  primary:(
    default: (
      color: sage-color(primary, 300),
    ),
    hover: (
      color: sage-color(primary, 400),
    ),
    focus: (
      color: sage-color(primary, 300),
    ),
  ),
  secondary:(
    default: (
      color: sage-color(charcoal, 400),
    ),
    hover: (
      color: sage-color(black),
    ),
    focus: (
      color: sage-color(charcoal, 400),
    ),
  ),
  neutral:(
    default: (
      color: sage-color(white),
    ),
    hover: (
      color: sage-color(grey, 100),
    ),
    focus: (
      color: sage-color(white),
    ),
  ),
  danger:(
    default: (
      color: sage-color(red, 300),
    ),
    hover: (
      color: sage-color(red, 400),
    ),
    focus: (
      color: sage-color(red, 300),
      focus-outline: sage-color(red, 200),
    ),
  )
);

.sage-link {
  @extend %t-sage-body-semi;

  display: inline-flex;
  position: relative;
  max-width: 100%;
  min-width: 0; /* the is needed so that truncation work when the link doesn't have an explicit width set  */
  text-decoration: underline;

  @include sage-focus-outline($outline-offset-inline: 4px);

  &:hover {
    color: sage-color(primary, 400);
  }

  &:focus {
    color: sage-color(primary, 300);

    @include sage-focus-outline--update-color(sage-color(primary, 200));
  }

  .sage-catalog-item__title &,
  &.sage-table-cell__link--primary {
    position: static;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: sage-z-index(default, 1);
    }

    &::after {
      width: 100%;
      height: 100%;
      border-radius: inherit;
    }

    &:hover {
      color: sage-color(charcoal, 500);

      /* stylelint-disable max-nesting-depth */
      .t-sage--truncate {
        text-decoration: underline;
      }
      /* stylelint-enable max-nesting-depth */
    }
  }
}

@each $-style-name, $-styles in $-link-base-styles {
  .sage-link--#{$-style-name} {
    @each $-style-type-name, $-style-type-configs in $-styles {
      @if ($-style-type-name == hover) {
        /* stylelint-disable max-nesting-depth */
        &:hover {
          color: map-get($-style-type-configs, color);
        }
        /* stylelint-enable max-nesting-depth */
      }
      @else if ($-style-type-name == focus) {
        /* stylelint-disable max-nesting-depth */
        &:focus,
        &:active {
          color: map-get($-style-type-configs, color);

          @include sage-focus-outline--update-color(map-get($-style-type-configs, focus-outline));
        }
        /* stylelint-enable max-nesting-depth */
      }
      @else {
        color: map-get($-style-type-configs, color);
      }
    }
  }
}

.sage-link--launch .t-sage--truncate,
.sage-type a[target="_blank"]:not(.sage-link--no-launch):not([class*="icon-right-launch"]) .t-sage--truncate {
  &::after {
    margin-left: sage-spacing(2xs);
    margin-right: sage-spacing(2xs);
    @include sage-icon-base(launch, sm);
  }
}

.sage-link--help,
.sage-link--help-icon-only {
  position: relative;
  text-decoration: none;

  &::before {
    @include sage-icon-base(question-circle, lg);

    color: sage-color(charcoal, 100);
  }

  &:hover,
  &:active,
  &:focus {
    outline: 0;

    &::before {
      color: sage-color(charcoal, 300);
    }
  }

  .sage-page-heading__title & {
    margin-left: sage-spacing(xs);
  }
}

.sage-link--help {
  display: inline-flex;
  align-items: center;

  &::before {
    margin-right: sage-spacing(xs);
  }
}

.sage-link--help-icon-only {
  @include sage-focus-outline($outline-offset-inline: 4px, $outline-offset-block: 2px);
  @include sage-focus-outline--update-color($-link-color);
}

.sage-link--remove-underline {
  text-decoration: none;
}

.sage-link--small {
  @extend %t-sage-body-small-semi;
}

.sage-link--subtext {
  @include sage-focus-outline--update-color(currentColor);

  display: inline-block;
  position: relative;
  padding: 0 sage-spacing(2xs);
  color: $-link-subtext-color;
  border-radius: sage-border(radius-small);

  &:hover {
    color: $-link-subtext-color-hover;
    text-decoration: underline;
  }

  &:focus {
    color: $-link-subtext-color-hover;
    text-decoration: none;
  }
}
