////
/// Typography setup
///
/// @group sage
////


// Font definitions
$-body-font-stack: "Circular", -apple-system, "BlinkMacSystemFont", "Segoe UI", "Roboto", "Helvetica Neue", "Arial", "Noto Sans", sans-serif;
$-body-margin-bottom: sage-spacing(xs);
$-headings-margin-bottom: sage-spacing(sm);


body:not(.sage-excluded) {
  @include sage-font-family();
}

.sage-scoped {
  @include sage-font-family();

  * {
    @include sage-font-family();
  }
}

body:not(.sage-excluded),
.sage-scoped {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-size-adjust: 100%;
  color: map-get($sage-text-colors, body);
  font-size: sage-font-size();
}

// Automate setting up classes that extend the specs
@each $spec-name, $spec in $sage-type-specs {
  .t-sage-#{$spec-name} {
    @extend %t-sage-#{$spec-name};
    color: inherit;
  }
}


// For simpler markup styling in blocks of CMS-like text, use this container
.sage-type {

  // Body-like elements get spacing below
  > p:not([class]),
  > ul:not([class]),
  > ol:not([class]),
  > dl:not([class]),
  > [class*="t-sage-body"] {
    @include sage-block-spacing($-body-margin-bottom);
  }

  // Heading-like elements get spacing below as well
  > h1:not([class]),
  > h2:not([class]),
  > h3:not([class]),
  > h4:not([class]),
  > h5:not([class]),
  > h6:not([class]),
  > [class*="t-sage-heading-"] {
    color: map-get($sage-text-colors, heading);

    @include sage-block-spacing($-headings-margin-bottom);
  }

  // Elements with no classes extend related type specs
  > h1:not([class]) {
    @extend %t-sage-heading-1;
  }

  > h2:not([class]) {
    @extend %t-sage-heading-2;

    &:not(:first-child) {
      margin-top: sage-spacing(lg);
    }
  }

  > .t-sage-heading-2:not(:first-child) {
    margin-top: sage-spacing(lg);
  }

  > h3:not([class]) {
    @extend %t-sage-heading-3;

    &:not(:first-child) {
      margin-top: sage-spacing();
    }
  }

  > h4:not([class]) {
    @extend %t-sage-heading-4;

    &:not(:first-child) {
      margin-top: sage-spacing();
    }
  }

  > h5:not([class]) {
    @extend %t-sage-heading-5;

    &:not(:first-child) {
      margin-top: sage-spacing();
    }
  }

  > h6:not([class]) {
    @extend %t-sage-heading-6;

    &:not(:first-child) {
      margin-top: sage-spacing();
    }
  }

  > .t-sage-heading-3,
  > .t-sage-heading-4,
  > .t-sage-heading-5,
  > .t-sage-heading-6 {
    &:not(:first-child) {
      margin-top: sage-spacing();
    }
  }

  > ul li:not([class]),
  > ol li:not([class]),
  > p:not([class]) {
    @extend %t-sage-body;
  }

  // Hyperlinks get some default coloring applied
  > a:not([class]),
  > a[class*="sage-link"] {
    color: sage-color(primary, 500);

    &:hover {
      color: sage-color(primary, 700);
    }
  }

  > table:not(:last-child) {
    margin-top: sage-spacing();
    margin-bottom: sage-spacing();
  }
}


// Generate text color modifiers
@each $color-name, $color-slider in $sage-colors {
  // Default color values
  $color-value: sage-color($color-name);

  @if ($color-name == grey) {
    $color-value: sage-color($color-name, 500);
  }

  .t-sage--color-#{"" + $color-name} {
    color: $color-value;
  }

  // Specific color values
  @each $-level, $-value in $color-slider {
    .t-sage--color-#{"" + $color-name}-#{$-level} {
      color: sage-color($color-name, $-level);
    }
  }
}

.t-sage--align-center {
  text-align: center;
}

.t-sage--align-right {
  text-align: right;
}

.t-sage--align-justify {
  text-align: justify;
}

.t-sage--strikethrough {
  text-decoration: line-through;
}

.t-sage--truncate {
  @include truncate;
}

.t-sage--truncate-min-width {
  min-width: 0;
}

.t-sage--line-clamp {
  @include line-clamp(1);
}

@for $i from 2 through 4 {
  .t-sage--line-clamp-#{$i} {
    -webkit-line-clamp: #{$i};
  }
}
