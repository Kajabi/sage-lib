////
/// Sage Dictionary tokens
///
/// Note: The contents of this file are generated by Style Dictionary
/// and should not be modified directly here.
/// See `/style-dictionary` directory for tokens and configurations.
////

{{#each categories}}
  {{#each types}}
///
/// Static vars for {{../category}} {{type}}
///
    {{#each tokens}}
$sage-{{../../category}}-{{../type}}-{{name}}: {{#if value.value}}{{{value.value}}}{{else}}{{{value}}}{{/if}};
    {{/each}}

    {{#if (isBaseType type)}}
///
/// Map for {{../category}} {{type}}
///
$sage-{{../category}}-{{type}}: (
    {{#each tokens}}
  {{name}}: $sage-{{../../category}}-{{../type}}-{{name}},
    {{/each}}
);

///
/// Sage {{../category}} token utility
///
/// @param {string} $key [default] The token to retrieve
///
@function sage-{{../category}}($key: default) {
  $value: map-get($sage-{{../category}}-{{type}}, $key);
  @return $value;
}

    {{else}}
///
/// Map for {{../category}} {{type}}
///
$sage-{{../category}}-{{type}}: (
    {{#each tokens}}
  {{name}}: $sage-{{../../category}}-{{../type}}-{{name}},
    {{/each}}
);

///
/// Sage {{../category}} {{type}} token utility
///
/// @param {string} $key [default] The token to retrieve
///
@function sage-{{../category}}-{{type}}($key: default) {
  $value: map-get($sage-{{../category}}-{{type}}, $key);
  @return $value;
}

    {{/if}}

  {{/each}}
{{/each}}
