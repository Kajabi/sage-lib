////
/// Sage Dictionary tokens
///
/// Note: The contents of this file are generated by Style Dictionary
/// and should not be modified directly here.
/// See `/style-dictionary` directory for tokens and configurations.
///
/// @group tokens
////

{{#each categories}}
// ----------
//
// Category: {{category}}
//
// ----------

  {{#each types}}
//
// Type: {{type}}
//

//
// Static vars for {{../category}} {{type}}
//
    {{#each tokens}}
///
/// {{../../category}}{{#if (notBaseType ../type)}} {{../type}}{{/if}} {{name}}
///
$sd-sage-{{name}}: {{#if value.value}}{{{value.value}}}{{else}}{{{value}}}{{/if}};
    {{/each}}

///
/// Map for {{../category}} {{type}}
///
$sd-sage-{{../category}}{{#if (notBaseType type)}}-{{type}}{{/if}}: (
    {{#each items}}
      {{#if (hasAny subitems)}}
  {{item}}: (
        {{#each subitems}}
          {{#if (hasAny states)}}
    {{subitem}}: (
            {{#each states}}
      {{state}}: $sd-sage-{{name}},
            {{/each}}
    ),
          {{else}}
    {{subitem}}: $sd-sage-{{name}},
          {{/if}}
        {{/each}}
  ),
      {{else}}
  {{item}}: $sd-sage-{{name}},
      {{/if}}
    {{/each}}
);

///
/// Sage {{../category}} {{type}} token utility
///
/// @param {string} $key The token to retrieve
    {{#if (hasAnySubitems items)}}
/// @param {string} $subkey The subtoken to retrieve
    {{/if}}
    {{#if (hasAnyStates items)}}
/// @param {string} $subsubkey The sub-subtoken to retrieve
    {{/if}}
///
@function sd-sage-{{../category}}{{#if (notBaseType type)}}-{{type}}{{/if}}(
  $key{{#if (hasAnySubitems items)}},
  $subkey{{#if (hasAnyStates items)}},
  $subsubkey{{/if}}{{/if}}
) {
  $value: map-get($sd-sage-{{../category}}{{#if (notBaseType type)}}-{{type}}{{/if}}, $key);
    {{#if (hasAnySubitems items)}}
  $value: map-get($value, $subkey);
    {{/if}}
    {{#if (hasAnyStates items)}}
  $value: map-get($value, $subsubkey);
    {{/if}}
  @return $value;
}

  {{/each}}
{{/each}}
