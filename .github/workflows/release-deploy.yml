name: Release-Deploy
on:
  # !!Emergency override!! uncomment below and access the actions tab in GitHub to run a release/deploy
  # workflow_dispatch:
  push:
    branches:
      - main
jobs:
  release_deploy:
    name: Release and Deploy
    runs-on: ubuntu-latest
    container:
      image: kajabiprodeng/ruby:2.4.9-alpine3.13

    steps:

      - name: Install dependencies
        env:
          BUILD_PACKAGES: bash build-base cyrus-sasl-dev git git-subtree libtool libsasl snappy-dev tzdata tar curl xz
        run: |
          apk add --update --no-cache $BUILD_PACKAGES

      - name: Install node and yarn
        env:
          YARN_VERSION: 1.22.5
          NODE_VERSION: 14.14.0
          ARCH: "x64"
        run: |
          curl -fsSLO --compressed "https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz"; \
          tar -xJf "node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz" -C /usr/local --strip-components=1 --no-same-owner \
          && ln -s /usr/local/bin/node /usr/local/bin/nodejs \
          && curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz" \
          && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \
          && ln -snf /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \
          && ln -snf /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \
          && rm yarn-v$YARN_VERSION.tar.gz \
          && rm node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz

      # Setup Auth token to push to github packages
      - name: Set NPM Config
        run: npm config set '//npm.pkg.github.com/:_authToken' '${{ secrets.ACCESS_TOKEN }}'

      - name: Unsafe Perm set
        run: npm config set unsafe-perm true

      - name: Clone Sage-Lib Repo
        uses: actions/checkout@v2
        with:
          # pulls all commits (needed for lerna / semantic release to correctly version)
          fetch-depth: "0"

      # Setup Git Credentials to come from the Bot
      - name: Set Bot Email
        run: git config user.email "dev+github-bot@kajabi.com"

      - name: Set Bot Name
        run: git config user.name "Kajabi Automation Bot"

      # Install/Lint/Test/Build
      # Since Lint-Test-Build runs on every PR this is only really necessary
      # to ensure we don't get a crash prior to the release.
      - name: Yarn Install
        run: yarn install

      - name: Yarn Lint
        run: yarn lint

      - name: Yarn Test
        run: yarn test

      - name: Yarn Build
        run: yarn build

      # Lerna Bootstrap and Publish package
      - name: Lerna Bootstrap
        run: npx lerna bootstrap --ci

      - name: Lerna Version and Publish
        run: |
          npx lerna version --conventional-commits --conventional-graduate --yes
          npx lerna publish from-git --registry github --yes

      # Deploy site
      - name: Documentation Site Deploy
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_DOCS_APP_NAME: ${{ secrets.HEROKU_DOCS_APP_NAME }}
        run: yarn docs:deploy

      - name: Storybook Site Deploy
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_STORYBOOK_APP_NAME: ${{ secrets.HEROKU_STORYBOOK_APP_NAME }}
        run: yarn storybook:deploy

      - name: SassDocs Site Deploy
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_SASSDOCS_APP_NAME: ${{ secrets.HEROKU_SASSDOCS_APP_NAME }}
        run: yarn sassdocs:deploy
