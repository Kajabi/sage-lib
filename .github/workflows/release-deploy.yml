name: Release-Deploy
on:
  # !!Emergency override!! uncomment below and access the actions tab in GitHub to run a release/deploy
  # workflow_dispatch:
  push:
    branches:
      - main
jobs:
  release_deploy:
    name: Release and Deploy
    runs-on: ubuntu-latest
    container:
      image: ruby:2.7.7-alpine3.16

    steps:
      - name: Install dependencies
        env:
          BUILD_PACKAGES: bash build-base cyrus-sasl-dev git git-subtree libtool libsasl snappy-dev tzdata tar curl xz
        run: |
          apk add --update --no-cache $BUILD_PACKAGES

      - name: Set Node Version
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install Yarn
        run: npm install -g yarn

      # Setup Auth token to push to github packages
      - name: Set NPM Config
        run: npm config set '//npm.pkg.github.com/:_authToken' '${{ secrets.ACCESS_TOKEN }}'

      - name: Unsafe Perm set
        run: npm config set unsafe-perm true

      - name: Add safe directory
        run: git config --global --add safe.directory /__w/sage-lib/sage-lib

      - name: Clone Sage-Lib Repo
        uses: actions/checkout@v3
        with:
          # pulls all commits (needed for lerna / semantic release to correctly version)
          fetch-depth: "0"

      - name: Install Bundler 2.3.22
        run: gem install bundler:2.3.22

      # Setup Git Credentials to come from the Bot
      - name: Set Bot Email
        run: git config user.email "dev+github-bot@kajabi.com"

      - name: Set Bot Name
        run: git config user.name "Kajabi Automation Bot"

      # Install/Lint/Test/Build
      # Since Lint-Test-Build runs on every PR this is only really necessary
      # to ensure we don't get a crash prior to the release.
      - name: Yarn Install
        run: yarn install

      - name: Archive Yarn.lock files
        uses: actions/upload-artifact@v3
        with:
          name: yarn.lock
          path: yarn.lock
          retention-days: 14

      - name: Yarn Lint
        run: yarn lint

      - name: Yarn Test
        run: yarn test

      - name: Yarn Build
        run: yarn build

      # Lerna Bootstrap and Publish package
      - name: Lerna Bootstrap
        run: npx lerna bootstrap --ci

      - name: Lerna Publish
        run: npx lerna publish --registry github --yes

      # Deploy site
      - name: Documentation Site Deploy
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_DOCS_APP_NAME: ${{ secrets.HEROKU_DOCS_APP_NAME }}
        run: yarn docs:deploy

      - name: Storybook Site Deploy
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_STORYBOOK_APP_NAME: ${{ secrets.HEROKU_STORYBOOK_APP_NAME }}
        run: yarn storybook:deploy

      - name: SassDocs Site Deploy
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_SASSDOCS_APP_NAME: ${{ secrets.HEROKU_SASSDOCS_APP_NAME }}
        run: yarn sassdocs:deploy
