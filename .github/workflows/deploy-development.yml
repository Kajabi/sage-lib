name: Deploy-Development
on:
  # !!Emergency override!! uncomment below and access the actions tab in GitHub to run a release/deploy
  # workflow_dispatch:
  push:
    branches:
      - develop
jobs:
  release_deploy:
    name: Release and Deploy
    runs-on: ubuntu-latest
    # container:
    #   image: ruby:2.5.9-alpine3.13

    steps:

      # # Setup Auth token to push to github packages
      - name: Set NPM Config
        run: npm config set '//npm.pkg.github.com/:_authToken' '${{ secrets.ACCESS_TOKEN }}'

      # - name: Unsafe Perm set
      #   run: npm config set unsafe-perm true

      - name: Add safe directory
        run: git config --global --add safe.directory /__w/sage-lib/sage-lib

      - name: Clone Sage-Lib Repo
        uses: actions/checkout@v2
        with:
          # pulls all commits (needed for lerna / semantic release to correctly version)
          fetch-depth: "0"

      # Setup Git Credentials to come from the Bot
      - name: Set Bot Email
        run: git config user.email "dev+github-bot@kajabi.com"

      - name: Set Bot Name
        run: git config user.name "Kajabi Automation Bot"

      - name: Determine git sha to checkout
        uses: haya14busa/action-cond@v1
        id: gitsha
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: ${{ github.event.pull_request.head.sha }}
          if_false: ${{ github.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.9.1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.SAGE_ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SAGE_ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1200
          role-session-name: SageECRPushSession

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set branch name if not PR
        if: github.event_name != 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Set branch name if PR
        if: github.event_name == 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF})" >> $GITHUB_ENV

      - name: Set valid docker tag branch name
        run: echo "DOCKER_BRANCH_NAME=$(echo $BRANCH_NAME | sed "s/[^[:alnum:]\-\.\_]/-/g")-$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build and push docs site
        uses: docker/build-push-action@v2
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_SAGE_DOCS }}
          IMAGE_SHA_TAG: ${{ steps.gitsha.outputs.value }}
        with:
          file: ./docs/Dockerfile
          build-args: |
            GITHUB_TOKEN=${{ secrets.ACCESS_TOKEN }}
          context: ./docs
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_SAGE_DOCS }}:${{ steps.gitsha.outputs.value }}-release-development

      - name: Build and push storybook
        uses: docker/build-push-action@v2
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_SAGE_STORYBOOK }}
          IMAGE_SHA_TAG: ${{ steps.gitsha.outputs.value }}
        with:
          file: ./packages/sage-react/Dockerfile
          build-args: |
            GITHUB_TOKEN=${{ secrets.ACCESS_TOKEN }}
          context: ./packages/sage-react/
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_SAGE_STORYBOOK }}:${{ steps.gitsha.outputs.value }}-release-development

      - name: Build and push sassdocs
        uses: docker/build-push-action@v2
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_SAGE_SASSDOCS }}
          IMAGE_SHA_TAG: ${{ steps.gitsha.outputs.value }}
        with:
          file: ./packages/sage-assets/Dockerfile
          build-args: |
            GITHUB_TOKEN=${{ secrets.ACCESS_TOKEN }}
          context: ./packages/sage-assets/
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_SAGE_SASSDOCS }}:${{ steps.gitsha.outputs.value }}-release-development