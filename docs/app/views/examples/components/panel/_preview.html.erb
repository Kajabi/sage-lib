<%
sample_copy = md("
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
Morbi rhoncus mauris ut turpis gravida bibendum.
Donec feugiat accumsan velit et semper.
Ut elementum id leo ac fringilla.
")
%>

<%= md('
<strong class="t-sage--color-orange">
  While this page depicts panels within cards this merely a consequence of our documentation structure
  and NOT a pattern that should be implemented elsewhere.
</strong>
', use_sage_type: true) %>

<%= sage_component SagePanelHeader, { title: "Basic Panel" } %>

<%= sage_component SagePanel, {} do %>
  <%= sage_component SagePanelHeader, { title: "Panel Header" } do %>
    <%= sage_component SageButton, {
      value: "More info",
      subtle: true,
      style: "secondary",
      icon: {
        name: "info-circle",
        style: "only"
      }
    } %>
  <% end %>
  <%= sage_component SagePanelBlock, { type_block: true } do %>
    <%= sample_copy.html_safe %>
  <% end %>
  <%= sage_component SagePanelFooter, {} do %>
    <%= sage_component SageButton, { value: "Cancel", style: "secondary" } %>
    <%= sage_component SageButton, { value: "Save", style: "primary" } %>
  <% end %>
<% end %>

<%= md("
Panels are rich containers that allow for grouping and organizing content details. They have the following overall setup available:

- **Header**
  `.sage-panel__header` 
  (optional) This area usually contains at least a title (`sage-panel__title`)
  and often an icon or menu flanking the right corner.
  It employs the Sage Row layout base with `24px` gutters.

- **Body**
  While there is no specific container for the body itself,
  there are a variety of panel components that can be used to create most panel configurations.
  The simplest of these **Panel Block** `.sage-panel__block` (shown above)
  allows for open text or elements with no preset spacing is desired.
  In the case of open text, the `sage-type` class can also be added to enforce open text spacing rules.
  Each of the Panel components is explained and demonstrated in more detail below.

- **Footer**
  `.sage-panel__footer` 
  (optional) This area often contains one or more buttons
  that can be sent to the right edge of the panel
  with the `sage-panel__footer--align-right` modifier.
  It employs the Sage Row layout base with `24px` gutters.
", use_sage_type: true) %>

<%= sage_component SagePanelHeader, { title: "Panel Stack <code>.sage-panel__stack</code>".html_safe } %>
<%= md("
A stack is a single column of elements sitting atop each other
with the standard 8px gap between each item in the stack.
A common use is for stacking cards, but this is also help for
presentation of several distinct lines of text content beyond open type formatting.
", use_sage_type: true) %>

<%= sage_component SagePanelSubheader, { title: "Example:" } %>

<%= sage_component SagePanel, {} do %>
  <%= sage_component SagePanelStack, {} do %>
    <%= sage_component SageCard, {} do %>
      <%= sage_component SageCardRow, { grid_template: "et" } do %>
        <i class="sage-icon-video-on"></i>
        <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span>
      <% end %>
    <% end %>
    <%= sage_component SageCard, {} do %>
      <%= sage_component SageCardRow, { grid_template: "et" } do %>
        <i class="sage-icon-video-on"></i>
        <span>Morbi rhoncus mauris ut turpis gravida bibendum.</span>
      <% end %>
    <% end %>
    <%= sage_component SageCard, {} do %>
      <%= sage_component SageCardRow, { grid_template: "et" } do %>
        <i class="sage-icon-video-on"></i>
        <span>Donec feugiat accumsan velit et semper.</span>
      <% end %>
    <% end %>
    <%= sage_component SageCard, {} do %>
      <%= sage_component SageCardRow, { grid_template: "et" } do %>
        <i class="sage-icon-video-on"></i>
        <span>Ut elementum id leo ac fringilla.</span>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<%= sage_component SagePanelHeader, { title: "Panel List <code>.sage-panel__list</code>".html_safe } %>
<%= md("
A list is a similar to a stack but has no space between items,
and each item has a border that extends into the panel's outer gutters.
Lists can also have row-like layouts with elements setup inline.
", use_sage_type: true) %>

<%= sage_component SagePanelSubheader, { title: "Example:" } %>
<%= sage_component SagePanel, {} do %>
  <%= sage_component SagePanelList, {} do %>
    <%= sage_component SagePanelListItem, { grid_template: "et" } do %>
      <i class="sage-icon-video-on"></i>
      <span class="t-sage-body">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span>
    <% end %>
    <%= sage_component SagePanelListItem, { grid_template: "et" } do %>
      <i class="sage-icon-video-on"></i>
      <span class="t-sage-body">Morbi rhoncus mauris ut turpis gravida bibendum.</span>
    <% end %>
    <%= sage_component SagePanelListItem, { grid_template: "et" } do %>
      <i class="sage-icon-video-on"></i>
      <span class="t-sage-body">Donec feugiat accumsan velit et semper.</span>
    <% end %>
    <%= sage_component SagePanelListItem, { grid_template: "et" } do %>
      <i class="sage-icon-video-on"></i>
      <span class="t-sage-body">Ut elementum id leo ac fringilla.</span>
    <% end %>
  <% end %>
<% end %>

<%= sage_component SagePanelHeader, { title: "Panel Row <code>.sage-panel__row</code>".html_safe } %>
<%= md("
A row is a single or isolated inline arrangement or elements.
It can either be a custom component or employ one of the standard Grid Template Patterns.
", use_sage_type: true) %>

<%= sage_component SagePanelSubheader, { title: "Example:" } %>
<%= sage_component SagePanel, {} do %>
  <%= sage_component SagePanelRow, { grid_template: "ete" } do %>
    <i class="sage-icon-check-circle-xl t-sage--color-sage"></i>
    <%= sage_component SagePanelBlock, {} do %>
      <p class="t-sage-body-semi">Lorem ipsum dolor sit amet</p>
      <p class="t-sage-body-small t-sage--color-grey">consectetur adipiscing elit</p>
    <% end %>
    <%= sage_component SageButton, {
      value: "Options",
      style: "secondary",
      subtle: true,
      icon: {
        name: "dot-menu-horizontal",
        style: "only"
      }
    } %>
  <% end %>
<% end %>

<%= sage_component SagePanelHeader, { title: "Panel Tiles <code>.sage-panel__tiles</code>".html_safe } %>
<%= md("
Tiles are groups of elements that typically also each contain additional content but are laid out in a neat tiling pattern.
Items can use the generic `.sage-panel__tile`, or be another Sage Component such as a Card.
Use one of the tiling pattern modifiers to determine how many tiles appear in a row of the grid: 2-up, 3-up, and 4-up patterns.
", use_sage_type: true) %>

<%= sage_component SagePanelSubheader, { title: "Example:" } %>
<%= sage_component SagePanel, {} do %>
  <%= sage_component SagePanelTiles, { tiles_in_row: 3 } do %>
    <%= sage_component SageCard, {} do %>
      <%= sage_component SageCardFigure, {} do %>
        <%= image_tag("card-placeholder-sm.png", alt: "") %>
      <% end %>
      <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span>
    <% end %>
    <%= sage_component SageCard, {} do %>
      <%= sage_component SageCardFigure, {} do %>
        <%= image_tag("card-placeholder-sm.png", alt: "") %>
      <% end %>
      <span>Morbi rhoncus mauris ut turpis gravida bibendum.</span>
    <% end %>
    <%= sage_component SageCard, {} do %>
      <%= sage_component SageCardFigure, {} do %>
        <%= image_tag("card-placeholder-sm.png", alt: "") %>
      <% end %>
      <span>Donec feugiat accumsan velit et semper.</span>
    <% end %>
    <%= sage_component SageCard, {} do %>
      <%= sage_component SageCardFigure, {} do %>
        <%= image_tag("card-placeholder-sm.png", alt: "") %>
      <% end %>
      <span>Ut elementum id leo ac fringilla.</span>
    <% end %>
    <%= sage_component SageCard, {} do %>
      <%= sage_component SageCardFigure, {} do %>
        <%= image_tag("card-placeholder-sm.png", alt: "") %>
      <% end %>
      <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span>
    <% end %>
  <% end %>
<% end %>

<%= sage_component SagePanelHeader, { title: "Panel Subheader <code>.sage-panel__subheader</code>".html_safe } %>
<%= md("
The Panel Subheader provides specific styles for a subheading within a panel.
It is very similar in configuration to the panel header but shows with smaller type.
Format the text content itself with `.sage-panel__subtitle`, which can also be used independently.
", use_sage_type: true) %>

<%= sage_component SagePanelSubheader, { title: "Example:" } %>
<%= sage_component SagePanel, {} do %>
  <%= sage_component SagePanelHeader, { title: "Panel header here" } %>
  <%= sage_component SagePanelSubheader, { title: "Panel subheader here" } %>
  <%= sage_component SagePanelBlock, { type_block: true } do %>
    <%= sample_copy.html_safe %>
  <% end %>
<% end %>

<%= sage_component SagePanelHeader, { title: "Panel Divider <code>.sage-panel__divider</code>".html_safe } %>
<%= md("
The Divider is a thin rule that helps to provide additional visual separation between groups within the panel.
", use_sage_type: true) %>

<%= sage_component SagePanelSubheader, { title: "Example:" } %>
<%= sage_component SagePanel, {} do %>
  <%= sage_component SagePanelHeader, { title: "Panel header here" } %>
  <%= sage_component SagePanelBlock, { type_block: true } do %>
    <%= sample_copy.html_safe %>
  <% end %>
  <%= sage_component SagePanelDivider, {} %>
  <%= sage_component SagePanelSubheader, { title: "Panel subheader here" } %>
  <%= sage_component SagePanelBlock, { type_block: true } do %>
    <%= sample_copy.html_safe %>
  <% end %>
<% end %>
<%= md("
Dividers can also be set to extend to the panel edges with the `--full-bleed` modifier
", use_sage_type: true) %>

<%= sage_component SagePanelHeader, { title: "Panel Figure <code>.sage-panel__figure</code>".html_safe } %>
<%= md("
A Panel Figure contains an image that occupies a substantive space in the panel,
typically filling edge to edge, and possibly even full bleed in the panel.
We also have a modifier `.sage-panel__figure--wistia` for when Wistia videos are embedded in a figure.
", use_sage_type: true) %>

<%= sage_component SagePanelSubheader, { title: "Example:" } %>
<%= sage_component SagePanel, {} do %>
  <p><i>This example shows a standard figure in context of this existing panel</i>.</p>
  <%= sage_component SagePanelFigure, {} do %>
    <%= image_tag("card-placeholder-lg.png", alt: "") %>
  <% end %>
  <p><i>This example shows a figure in context of this existing panel with side bleed</i>.</p>
  <%= sage_component SagePanelFigure, { bleed: "sides" } do %>
    <%= image_tag("card-placeholder-lg.png", alt: "") %>
  <% end %>
<% end %>
<p><i>These examples demonstrate figures with top and bottom bleed respectively</i>.</p>
<%= sage_component SagePanel, {} do %>
  <%= sage_component SagePanelFigure, { bleed: "top" } do %>
    <%= image_tag("card-placeholder-lg.png", alt: "") %>
  <% end %>
  <%= sage_component SagePanelBlock, { type_block: true } do %>
    <%= sample_copy.html_safe %>
  <% end %>
<% end %>
<%= sage_component SagePanel, {} do %>
  <%= sage_component SagePanelBlock, { type_block: true } do %>
    <%= sample_copy.html_safe %>
  <% end %>
  <%= sage_component SagePanelFigure, { bleed: "bottom" } do %>
    <%= image_tag("card-placeholder-lg.png", alt: "") %>
  <% end %>
<% end %>

<%= sage_component SagePanelHeader, { title: "Panel Grid Utility <code>.sage-panel-grid</code>".html_safe } %>
<%= md("
The `.sage-panel-grid` utility class can be added onto containers in order to enforce the Panel's internal grid settings.
This is helpful in cases where a container of some sort is needed around contents but those contents should still recieve the standard Panel-scoped gaps.
", use_sage_type: true) %>
