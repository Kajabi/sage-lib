<%= content_for :heading do %>
<%= md(%(
# The 12 Column Grid
<p class="docs-heading__lead">You may be familiar with grid systems from popular front-end frameworks, such as <a href="https://getbootstrap.com/docs/4.0/layout/grid/" rel="nofollow">Bootstrap</a> or <a href="https://get.foundation/sites/docs/grid.html" rel="nofollow">Foundation</a>. Similar to these, the Sage layout grid is constructed of individual columns (<code>.sage-col</code>) grouped within rows (<code>.sage-row</code>).</p>
)) %>
<% end %>
<%= content_for :quick_links do %>
  <div class="quick-links">
    <h2 class="quick-links__title">Contents</h2>
    <ul class="quick-links__body">
      <li class="quick-links__item">
        <a href="#grid-how-to" class="quick-links__link">How to use</a>
      </li>
      <li class="quick-links__item">
        <a href="#grid-setting-widths" class="quick-links__link quick-links__link--secondary">Setting widths</a>
      </li>
      <li class="quick-links__item">
        <a href="#grid-columns" class="quick-links__link quick-links__link--secondary">Column combinations</a>
      </li>
      <li class="quick-links__item">
        <a href="#grid-spacing" class="quick-links__link quick-links__link--secondary">Column spacing</a>
      </li>
      <li class="quick-links__item">
        <a href="#grid-responsive" class="quick-links__link">Responsive layouts</a>
      </li>
      <li class="quick-links__item">
        <a href="#grid-responsive-mobile-first" class="quick-links__link quick-links__link--secondary">Mobile first</a>
      </li>
      <li class="quick-links__item">
        <a href="#grid-responsive-naming" class="quick-links__link quick-links__link--secondary">Naming conventions</a>
      </li>
      <li class="quick-links__item">
        <a href="#grid-responsive-show-hide" class="quick-links__link quick-links__link--secondary">Hiding and showing content</a>
      </li>
      <li class="quick-links__item">
        <a href="#grid-alignment" class="quick-links__link">Alignment</a>
      </li>
      <li class="quick-links__item quick-links__link--secondary">
        <a href="#grid-alignment-vertical" class="quick-links__link">Vertical alignment</a>
      </li>
      <li class="quick-links__item quick-links__link--secondary">
        <a href="#grid-alignment-horizontal" class="quick-links__link">Horizontal alignment</a>
      </li>
    </ul>
  </div>
<% end %>
<div class="sage-type">
  <h3 class="t-sage-heading-5" id="grid-setting-widths">Setting widths</h3>
  <p>Our default grid consists of <strong>12 columns per row</strong>.</p>
  <div class="sage-row" aria-hidden="true">
    <div class="sage-col-1 sage-col--md-hide"><div class="grid-item grid-item--small">1</div></div>
    <div class="sage-col-1 sage-col--md-hide"><div class="grid-item grid-item--small">2</div></div>
    <div class="sage-col-1 sage-col--md-hide"><div class="grid-item grid-item--small">3</div></div>
    <div class="sage-col-1 sage-col--md-hide"><div class="grid-item grid-item--small">4</div></div>
    <div class="sage-col-1 sage-col--md-hide"><div class="grid-item grid-item--small">5</div></div>
    <div class="sage-col-1 sage-col--md-hide"><div class="grid-item grid-item--small">6</div></div>
    <div class="sage-col-1 sage-col--md-hide"><div class="grid-item grid-item--small">7</div></div>
    <div class="sage-col-1 sage-col--md-hide"><div class="grid-item grid-item--small">8</div></div>
    <div class="sage-col-1 sage-col--md-hide"><div class="grid-item grid-item--small">9</div></div>
    <div class="sage-col-1 sage-col--md-hide"><div class="grid-item grid-item--small">10</div></div>
    <div class="sage-col-1 sage-col--md-hide"><div class="grid-item grid-item--small">11</div></div>
    <div class="sage-col-1 sage-col--md-hide"><div class="grid-item grid-item--small">12</div></div>
  </div>
  <p>Each <code>.sage-col</code>'s width is independently sized using classes in the form of <code>.sage-col-&lt;# of columns&gt;</code>, where <code>&lt;# of columns&gt;</code> is an integer ranging from the minimum number of columns (1) through the maximum number of columns (12).
  <p>For example, a three-column wide <code>.sage-col-3</code> would be one-quarter (25%) the width of one <code>.sage-row</code>, since 3 columns divided by the 12 total columns in the row equals 25 percent.</p>
  <p>As a result, four <code>.sage-col-3</code> columns are needed to fill out one row.</p>

  <div class="sage-row" aria-hidden="true">
    <div class="sage-col-3"><div class="grid-item">25%</div></div>
    <div class="sage-col-3"><div class="grid-item">25%</div></div>
    <div class="sage-col-3"><div class="grid-item">25%</div></div>
    <div class="sage-col-3"><div class="grid-item">25%</div></div>
  </div>

  <h3 class="t-sage-heading-5" id="grid-columns">Column combinations</h3>
  <p>In the example below, each <code>.sage-col</code> example is named with the number of columns it represents. Generally, a single column (<code>.sage-col-1</code>) is too small for content, so <code>.sage-col-2</code> is the smallest width recommended for use.</p>
  <% 1.upto(9) do |num| %>
    <div class="sage-row">
      <div class="sage-col--md-<%= num + 1%>"><div class="grid-item"><%= num + 1%><span class="visually-hidden"> columns wide</span></div></div>
      <div class="sage-col--md-<%= 11 - num%>"><div class="grid-item"><%= 11 - num%><span class="visually-hidden"> columns wide</span></div></div>
    </div>
  <% end %>

  <h3 class="t-sage-heading-5" id="grid-spacing">Column spacing</h3>
  <p>Spacing between columns has been predefined at the Sage system level in the <code>_variables.scss</code> file. By default, this is set to <code>sage-spacing(sm)</code> (<a href="/sage/pages/token#spacing" rel="nofollow">1rem</a>).</p>

</div>

<div class="sage-type">
  <h2 id="grid-responsive">Responsive grid layouts</h2>
  <p>Viewing the <a href="#grid-columns">column combinations example above</a>, you may have noticed that the columns display as full-width blocks when viewed at smaller screen sizes. To account for the increased or decreased space available, we can target specific screen sizes (called <em>breakpoints</em>) by modifying the classnames used in each column. This is referred to as <a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design" rel="nofollow">responsive design</a>, giving us greater flexibility in our layouts.</p>

  <h3 class="t-sage-heading-5" id="grid-responsive-mobile-first">Mobile first</h3>
  <p>There are two primary methods to responsive design: <em>desktop-first</em> and <em>mobile-first</em>. While the full details of these approaches is beyond the scope of this documentation, you should be aware that <strong>Sage follows the mobile-first approach wherever possible</strong>. This means that base CSS is geared towards small screens/mobile devices, with additional styles added at increasing <code>min-width</code> (minimum width) breakpoints. This can help positively influence both real and perceived performance on mobile devices.</p>

  <h4 class="t-sage-heading-6">Preventing responsive layouts</h4>
  <p>At screen sizes below <code>sm</code> (&lt; 545px), all responsive columns will display as full-width, regardless of the breakpoint keyword in use. <strong>This behavior cannot be overridden</strong>.</p>
  <p>If your layout does not follow this pattern and must keep its column structure, you will need to use the classname <em>without</em> responsive keywords, as illustrated in the <a href="#grid-setting-widths">"setting widths" section</a>.</p>

  <h3 class="t-sage-heading-5" id="grid-responsive-naming">Naming conventions</h3>
  <p>Classnames for responsive columns follow this pattern: <code>.sage-col--&lt;breakpoint&gt;-&lt;# of columns&gt;</code></p>
  <p>Here, <code>&lt;breakpoint&gt;</code> is the screen size at which the layout will change, and <code>&lt;# of columns&gt;</code> sets the width of the column, <a href="#grid-setting-widths">noted in the sections above</a>.</p>
  <p>The predefined breakpoints keywords are <code>sm</code>, <code>md</code>, and <code>lg</code>:</p>
  <div class="sage-table-wrapper">
    <div class="sage-table-wrapper__overflow">
      <table class="sage-table">
        <caption>Minimum and maximum screen sizes refer to the range during which the keyword takes effect</caption>
        <thead>
          <tr>
            <th>Breakpoint keyword</th>
            <th>Minimum screen size (in pixels)</th>
            <th>Maximum screen size (in pixels)</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>sm</td>
            <td>545px</td>
            <td>767px</td>
          </tr>
          <tr>
            <td>md</td>
            <td>768px</td>
            <td>991px</td>
          </tr>
          <tr>
            <td>lg</td>
            <td>992px</td>
            <td>&infin;</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>

  <h3 class="t-sage-heading-5">Example layouts</h3>

  <h4 class="t-sage-heading-6">Small breakpoint</h4>
  <div class="sage-row">
    <div class="sage-col--sm-6"><div class="grid-item">Col</div></div>
    <div class="sage-col--sm-6"><div class="grid-item">Col</div></div>
  </div>
  <pre class="prettyprint"><code>&lt;div class=&quot;sage-row&quot;&gt;
  &lt;div class=&quot;sage-col--sm-6&quot;&gt;Col&lt;/div&gt;
  &lt;div class=&quot;sage-col--sm-6&quot;&gt;Col&lt;/div&gt;
&lt;/div&gt;</code></pre>

  <h4 class="t-sage-heading-6">Medium breakpoint</h4>
  <div class="sage-row">
    <div class="sage-col--md-4"><div class="grid-item">Col</div></div>
    <div class="sage-col--md-4"><div class="grid-item">Col</div></div>
    <div class="sage-col--md-4"><div class="grid-item">Col</div></div>
  </div>
  <pre class="prettyprint"><code>&lt;div class=&quot;sage-row&quot;&gt;
  &lt;div class=&quot;sage-col--md-4&quot;&gt;Col&lt;/div&gt;
  &lt;div class=&quot;sage-col--md-4&quot;&gt;Col&lt;/div&gt;
  &lt;div class=&quot;sage-col--md-4&quot;&gt;Col&lt;/div&gt;
&lt;/div&gt;</code></pre>

  <h4 class="t-sage-heading-6">Large breakpoint</h4>
  <div class="sage-row">
    <div class="sage-col--lg-4"><div class="grid-item">Col</div></div>
    <div class="sage-col--lg-8"><div class="grid-item">Col</div></div>
  </div>
  <pre class="prettyprint"><code>&lt;div class=&quot;sage-row&quot;&gt;
  &lt;div class=&quot;sage-col--lg-4&quot;&gt;Col&lt;/div&gt;
  &lt;div class=&quot;sage-col--lg-8&quot;&gt;Col&lt;/div&gt;
&lt;/div&gt;</code></pre>

<h4 class="t-sage-heading-6">Multiple breakpoints</h4>
<%= sage_component SageGridRow, {
    html_attributes: {
      "aria-hidden": true
    }
  } do %>
    <%= sage_component SageGridCol, {
      small: "12",
      medium: "6",
      large: "3",
      xlarge: "3",
    } do %>
      <div class="grid-item">1</div>
    <% end %>
    <%= sage_component SageGridCol, {
      small: "12",
      medium: "6",
      large: "3",
      xlarge: "3",
    } do %>
      <div class="grid-item">2</div>
    <% end %>
    <%= sage_component SageGridCol, {
      small: "12",
      medium: "6",
      large: "3",
      xlarge: "3",
    } do %>
      <div class="grid-item">3</div>
    <% end %>
    <%= sage_component SageGridCol, {
    } do %>
      <div class="grid-item">4</div>
    <% end %>
  <% end %>

  <%= sage_component SageAlert, {
    color: "warning",
    desc: "TODO - add code example for Multiple breakpoints.",
    icon_name: "sage-icon-warning",
    small: true
  } %>

  <h4 class="t-sage-heading-6">Auto Width</h4>
  <%= sage_component SageGridRow, {
    html_attributes: {
      "aria-hidden": true
    }
  } do %>
    <%= sage_component SageGridCol, {
      small: "12",
      medium: "6",
      large: "3",
    } do %>
      <div class="grid-item">1</div>
    <% end %>
    <%= sage_component SageGridCol, {
      css_classes: "sage-col-auto"
    } do %>
      <div class="grid-item">auto</div>
    <% end %>
    <%= sage_component SageGridCol, {
      small: "12",
      medium: "6",
      large: "3",
    } do %>
      <div class="grid-item">3</div>
    <% end %>
    <%= sage_component SageGridCol, {
    } do %>
      <div class="grid-item">4</div>
    <% end %>
  <% end %>

  <%= sage_component SageAlert, {
    color: "warning",
    desc: "TODO - add code example for Multiple breakpoints.",
    icon_name: "sage-icon-warning",
    small: true
  } %>

  <h3 class="t-sage-heading-5" id="grid-responsive-show-hide">Hiding and showing content</h3>
  <p>In cases where content will be hidden or shown at specific screen sizes, classes using breakpoint keywords are available. These classes use sizing from <code>sage-breakpoint()</code> to affect where content is displayed.</p>
  <p>Classnames for showing and hiding columns are composed in the following pattern: <code>.sage-col--&lt;breakpoint&gt;-&lt;show or hide&gt;</code>.</p>
  <p>As with the naming conventions for responsive columns, <code>&lt;breakpoint&gt;</code> corresponds to the breakpoint keyword, and <code>&lt;show or hide&gt;</code> indicates whether the content should be displayed with this breakpoint.</p>
  <p><strong>IMPORTANT:</strong> the difference between <code>show</code> and <code>hide</code> is that <code>show</code> displays the content for <em>that specified screen size only</em>, but <code>hide</code> will continue to hide content for <strong>all screen sizes below</strong> the breakpoint specified. Refer to the chart below for more detail.</p>

  <div class="sage-table-wrapper">
    <div class="sage-table-wrapper__overflow">
      <table class="sage-table">
        <caption>In this table, "visible" denotes that content will be shown at that breakpoint</caption>
        <thead>
          <tr>
            <th>Classname</th>
            <th>sm-min (545px)</th>
            <th>sm-max (767px)</th>
            <th>md-min (768px)</th>
            <th>md-max (991px)</th>
            <th>lg-min (992px)</th>
            <th>lg-max (1199px)</th>
            <th>xl-min (1200px)</th>
            <th>xl-max (1440px+)</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><code>.sage-col--sm-hide</code></td>
            <td>hidden</td>
            <td>hidden</td>
            <td><b>visible</b></td>
            <td><b>visible</b></td>
            <td><b>visible</b></td>
            <td><b>visible</b></td>
            <td><b>visible</b></td>
            <td><b>visible</b></td>
          </tr>
          <tr>
            <td><code>.sage-col--sm-show</code></td>
            <td><b>visible</b></td>
            <td><b>visible</b></td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
          </tr>
          <tr>
            <td><code>.sage-col--md-hide</code></td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
            <td><b>visible</b></td>
            <td><b>visible</b></td>
            <td><b>visible</b></td>
            <td><b>visible</b></td>
          </tr>
          <tr>
            <td><code>.sage-col--md-show</code></td>
            <td>hidden</td>
            <td>hidden</td>
            <td><b>visible</b></td>
            <td><b>visible</b></td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
          </tr>
          <tr>
            <td><code>.sage-col--lg-hide</code></td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
            <td><b>visible</b></td>
            <td><b>visible</b></td>
          </tr>
          <tr>
            <td><code>.sage-col--lg-show</code></td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
            <td>hidden</td>
            <td><b>visible</b></td>
            <td><b>visible</b></td>
            <td>hidden</td>
            <td>hidden</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>

</div>

<div class="sage-type">
  <h2 id="grid-alignment">Alignment</h2>
  <h3 class="t-sage-heading-5" id="grid-alignment-vertical">Vertical alignment</h3>
  <p>The default vertical alignment for each <code>.sage-row</code> aligns its columns to the top of the <code>.sage-row</code> container. This can be changed by adding one of the following <code>sage-row--valign</code> classes:</p>

  <div class="sage-table-wrapper">
    <div class="sage-table-wrapper__overflow">
      <table class="sage-table">
        <thead>
          <tr>
            <th>Property</th>
            <th>Vertical alignment</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Default (<code>.sage-row</code>)</td>
            <td>Top</td>
          </tr>
          <tr>
            <td><code>.sage-row--valign-center</code></td>
            <td>Middle (center)</td>
          </tr>
          <tr>
            <td><code>.sage-row--valign-bottom</code></td>
            <td>Bottom</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>

  <h3 class="t-sage-heading-5" id="grid-alignment-horizontal">Horizontal alignment</h3>
  <p>The horizontal alignment default for each <code>.sage-row</code> aligns columns to the start (left) of the <code>.sage-row</code> container. This alignment will only be visible if the number of columns of the <strong>total</strong> columns is fewer than the  To alter this, add a modifying <code>sage-row--align</code> class:</p>

  <div class="sage-table-wrapper">
    <div class="sage-table-wrapper__overflow">
      <table class="sage-table">
        <thead>
          <tr>
            <th>Property</th>
            <th>Horizontal alignment</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Default (<code>.sage-row</code>)</td>
            <td>Left</td>
          </tr>
          <tr>
            <td><code>.sage-row--align-center</code></td>
            <td>Center</td>
          </tr>
          <tr>
            <td><code>.sage-row--align-end</code></td>
            <td>Right</td>
          </tr>
          <tr>
            <td><code>.sage-row--align-space-between</code></td>
            <td>Extra space is distributed between columns</td>
          </tr>
          <tr>
            <td><code>.sage-row--align-space-around</code></td>
            <td>Extra space is distributed around columns</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
