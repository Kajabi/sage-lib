/* ==================================================
  ** _colors.scss

  For Sage documentation use
================================================== */

// ==================================================
// MIXINS
// ==================================================

@mixin color-block-output {
  padding: sage-spacing(sm) sage-spacing();
  font-size: sage-font-size(body-sm);
  color: sage-color(white);

  &::after {
    text-transform: uppercase;
  }
}

@mixin generate-color-tones($color, $tone, $hex) {
  &-#{$tone} {
    @include color-block-output();
    background: $hex;

    @if (($color == grey) or ($color == white)) {
      color: sage-color(charcoal, 500);
    }

    @else if (lightness($hex) > 60) {
      color: sage-color($color, 500);
    }

    &::after {
      content: "#{$hex}";
      padding-left: sage-spacing(xs);
      font-weight: sage-font-weight(semibold);
    }
  }


}

// color block groupings
.colors {
  overflow: hidden;
  margin-top: sage-spacing();
  margin-bottom: sage-spacing();
  border-radius: sage-border(radius);
}

.colors__block {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: space-between;

  @media screen and (min-width: sage-breakpoint(lg-min)) {
    flex-direction: row;
  }
}

.colors__tokens {
  code {
    background-color: transparent;
  }
}

// build individual color blocks
@each $name, $color in $sage-colors {
  .color-#{"" + $name} {
    @each $tone, $hex in $color {
      @include generate-color-tones($name, $tone, $hex);
    }
  }
}

[class*="color-"]:only-child {
  border-radius: sage-border(radius);
}

[class*="color-white-"] {
  box-shadow: inset 0 0 rem(1px) sage-color(charcoal);
}

[class*="color-black-"] {
  color: sage-color(white);
}
