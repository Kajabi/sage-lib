/* ==================================================
  ** _colors.scss

  For Sage documentation use
================================================== */

// ==================================================
// MIXINS
// ==================================================

// color block groupings
.colors {
  overflow: hidden;
  margin-top: sage-spacing();
  margin-bottom: sage-spacing();
  border-radius: sage-border(radius);
}

.colors__block {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: space-between;

  @media screen and (min-width: sage-breakpoint(lg-min)) {
    flex-direction: row;
  }
}

.colors__tokens {
  code {
    background-color: transparent;
  }
}

.sage-btn {
  font-size: sage-font-size(body-sm);
}

.sage-btn--subtle.sage-btn--secondary,
.sage-btn--subtle.sage-btn--secondary::before {
  color: inherit;
}

// build individual color blocks
@each $name, $color in $sage-colors {
  @each $value, $map in $color {
    $hex: sage-color($name, $value);

    .color-#{"" + $name}-#{$value} {
      padding: sage-spacing(sm) sage-spacing();
      font-size: sage-font-size(body);
      background: $hex;
      
      @if (($name == grey) or ($name == white)) {
        color: sage-color(charcoal, 500);
      }
      
      @else if (lightness($hex) > 60) {
        color: sage-color($name, 500);
      }
      
      @else {
        color: sage-color(white);
      }
      
      &::after {
        content: "#{$hex}";
        padding-left: sage-spacing(xs);
        font-weight: sage-font-weight(semibold);
        text-transform: uppercase;
      }
    }
  }
}

[class*="color-"]:only-child {
  border-radius: sage-border(radius);
}

[class*="color-white-"] {
  box-shadow: inset 0 0 rem(1px) sage-color(charcoal);
}

[class*="color-black-"] {
  color: sage-color(white);
}
