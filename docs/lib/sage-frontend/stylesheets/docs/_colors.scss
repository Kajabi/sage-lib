/* ==================================================
  ** _colors.scss

  For Sage documentation use
================================================== */

// ==================================================
// MIXINS
// ==================================================

// color block groupings
.colors {
  overflow: hidden;
  margin-block-start: sage-spacing();
  margin-block-end: sage-spacing();
  border-radius: sage-border(radius);
}

.colors__block {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: space-between;

  @media screen and (min-width: sage-breakpoint(lg-min)) {
    flex-direction: row;
  }
}

.colors__tokens {
  code {
    background-color: transparent;
  }
}

.colors__tokens-heading,
.colors__copy-btn,
.colors__copy-btn::before {
  .colors__classname-token &,
  .colors__hex-token & {
    color: inherit;
  }
}

// build individual color blocks
@each $name, $color in $sage-colors {
  @each $value, $map in $color {
    $hex: sage-color($name, $value);

    // Determine class name for $value == 50
    $classname: ".color-#{"" + $name}-#{$value}";

    // This should be numeric, not string
    @if ($value == 50) {
      $classname: ".color-#{"" + $name}-0#{$value}";
    }

    #{$classname} {
      padding: sage-spacing(sm) sage-spacing();
      font-size: sage-font-size(body);
      background: $hex;

      @if ($name == grey and $value > 400) {
        color: var(--pine-color-white);
      }
      @else if ($name == white or $name == grey) {
        color: var(--pine-color-grey-950);
      }
      @else if ($name == black or $name == charcoal) {
        color: var(--pine-color-white);
      }
      @else if ($name == blue and $value > 400) {
        color: var(--pine-color-blue-200);
      }
      @else if ($name == blue) {
        color: var(--pine-color-blue-950);
      }
      @else if ($name == mercury and $value > 200) {
        color: var(--pine-color-white);
      }
      @else if ($name == mercury) {
        color: var(--pine-color-mercury-500);
      }
      @else if ($name == green and $value > 200) {
        color: var(--pine-color-white);
      }
      @else if ($name == green) {
        color: var(--pine-color-green-600);
      }
      @else if ($name == yellow and $value > 300) {
        color: var(--pine-color-white);
      }
      @else if (lightness($hex) < 65) {
        color: var(--pine-color-$name-100);
      }
      @else {
        color: var(--pine-color-$name-400);
      }

      &::after {
        content: "#{$hex}";
        padding-inline-start: sage-spacing(xs);
        font-weight: sage-font-weight(semibold);
        text-transform: uppercase;
      }
    }
  }
}

[class*="color-"]:only-child {
  border-radius: sage-border(radius);
}

.color-white-100 {
  border-radius: sage-border(radius);
  border: 1px solid var(--pine-color-grey-800);
  box-shadow: inset 0 0 0.0625rem var(--pine-color-grey-800);
}

.color-black-100 {
  color: var(--pine-color-white);
}
