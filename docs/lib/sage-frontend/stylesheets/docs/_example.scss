/* ==================================================
  ** _example.scss

  For Sage documentation use
================================================== */

$-example-link-color: inherit;
$-example-link-color-hover: var(--pine-color-grey-600);

$-example-code-preview-height: 13rem;
$-example-code-preview-button-color: sage-color(white);
$-example-code-preview-button-color-hover: var(--pine-color-sage-100);
$-example-code-preview-button-blur: blur(2px);
$-example-code-preview-button-bg: rgba(var(--pine-color-primary-300), 0.75);

.example__title {
  color: var(--pine-color-grey-950);
  text-transform: capitalize;
}

.example__link {
  color: $-example-link-color;
  transition: map-get($sage-transitions, default);
  transition-property: color;

  &:hover {
    color: $-example-link-color-hover;
  }

  &:focus,
  &:active {
    text-decoration: underline;
    outline: none;
  }
}

.example__link--breakout {
  color: sage-color(sage);

  &:hover,
  &:focus,
  &:active {
    color: var(--pine-color-grey-950);
    text-decoration: none;
  }
}

.example__label {
  display: inline-block;
  min-width: rem(100px);
  margin: sage-spacing() 0;
  padding: sage-spacing(xs) sage-spacing();
  color: var(--pine-color-grey-950);
  text-align: center;
  background: sage-color(white);
  box-shadow: sage-shadow();
  border-radius: rem(20px);
}

.example__preview {
  margin: sage-spacing() 0;
}

.example__block {
  margin-block-start: sage-spacing(sm);
  margin-block-end: sage-spacing(sm);
}

.example__block--md {
  margin-block-start: sage-spacing(md);
  margin-block-end: sage-spacing(md);
}

.example__block--lg {
  margin-block-start: sage-spacing(lg);
  margin-block-end: sage-spacing(lg);
}

.example__expand-btn {
  @include sage-button-style-reset();
  position: absolute;
  z-index: sage-z_index(raised);
  inset-block-end: sage-spacing(xs);
  inset-inline-start: 0;
  width: 100%;
  padding: sage-spacing(xs);
  color: $-example-code-preview-button-color;
  background-color: $-example-code-preview-button-bg;
  transition: map-get($sage-transitions, default);
  transition-property: color, opacity;

  @extend %t-sage-body-small-med;

  .example__code--expanded & {
    opacity: 0.4;

    &:hover,
    &:focus,
    &:active {
      opacity: 1;
      cursor: n-resize;
    }
  }

  &:hover,
  &:focus,
  &:active {
    color: $-example-code-preview-button-color-hover;
    background-color: transparent;
    cursor: s-resize;
  }

  &:focus,
  &:active {
    outline: 1px dotted sage-color(sage);
  }

  @supports (backdrop-filter: blur(2px)) {
    backdrop-filter: $-example-code-preview-button-blur;
    background-color: rgba(var(--pine-color-primary-300), 0.15);

    .example__code--expanded & {
      backdrop-filter: none;
    }
  }
}

.example__code {
  overflow: hidden;
  position: relative;
  max-height: $-example-code-preview-height;

  .prettyprint {
    margin-block-end: 0;
    padding-block-end: sage-spacing(xl);
  }

  &::before {
    content: "";
    display: block;
    z-index: sage-z-index(default, 100);
    position: absolute;
    inset-inline-start: 0;
    inset-inline-end: 0;
    inset-block-end: 0;
    height: 100%;
    background-image: linear-gradient(to bottom, rgba($docs-code-editor-background, 0) 0%, rgba($docs-code-editor-background, 0.9) 100%);
    transition: map-get($sage-transitions, default);
    transition-property: opacity;
    pointer-events: none;
  }

  &.example__code--expanded {
    max-height: none;

    &::before {
      opacity: 0;
    }
  }
}

.example__wrapper {
  .sage-card {
    overflow: hidden;
    padding: 0;
    border: 0;
    background: var(--pine-color-grey-100);
  }
  .sage-card__header {
    padding: sage-spacing();
    padding-block-end: sage-spacing(xs);
    code {
      background: var(--pine-color-grey-300);
    }
  }
}

.demo-custom-class {
  display: flex;
  gap: sage-spacing(xs);
}

.demo-custom-popover-panel {
  width: rem(400px);
}


.docs-panel {
  $-media-tile-breakpoints: (
    1-col-max: 1239px,
    2-col-min: 1240px,
    2-col-max: 1619px,
    3-col-min: 1620px,
  );
  // Local overrides to better showcase the responsive grid in the docs context.
  .sage-media-tile-container {
    @media (max-width: map-get($-media-tile-breakpoints, 1-col-max)) {
      grid-template-columns: repeat(1, 1fr);
    }

    @media (min-width: map-get($-media-tile-breakpoints, 2-col-min)) and (max-width: map-get($-media-tile-breakpoints, 2-col-max)) {
      grid-template-columns: repeat(2, 1fr);
    }

    @media (min-width: map-get($-media-tile-breakpoints, 3-col-min)) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
}
